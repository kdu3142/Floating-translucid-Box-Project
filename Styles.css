/**
 * Base Layout
 * Sets up the viewport and establishes the 3D space
 * Background uses a subtle gradient for depth
 */
body {
    margin: 0;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #121212 0%, #1e1e1e 100%);
    overflow: hidden;
}

/**
 * 3D Scene Configuration
 * Establishes the perspective hierarchy and container structure
 * Each level preserves 3D space for nested elements
 */
.scene, .container {
    /* transform-style is commented out at container level
       to prevent perspective conflicts between boxes */
    position: relative;
}

.scene {
    /* Uses CSS variables from config.js for consistent 3D space */
    perspective: var(--scene-perspective);
    padding: var(--scene-padding);
}

/**
 * Box Container Structure
 * Implements individual perspective for each box
 * Prevents 3D transform interference between boxes
 */
.box-wrapper {
    /* Separate perspective container for each box
       Allows independent 3D transforms */
    position: relative;
    perspective: 1000px;
}

.container {
    /* Flexbox layout for box positioning
       Z-index ensures proper stacking with bubbles */
    display: flex;
    gap: var(--scene-containerGap);
    justify-content: center;
    align-items: center;
    z-index: 1;
}

/**
 * Floating Box Core Styles
 * Handles 3D transformations and hardware acceleration
 * @see FloatingBox class in Script.js for dynamic transforms
 */
.floating-box {
    position: relative;
    cursor: pointer;
    /* Performance optimizations */
    transform-style: preserve-3d;      /* Maintains 3D space for children */
    transform-origin: center center;   /* Centered rotation point */
    will-change: transform;           /* GPU acceleration hint */
    transition: transform 0.3s ease-out;
    transform: translateZ(0);
    backface-visibility: hidden;      /* Prevents rendering artifacts */
    z-index: 1;
    overflow: hidden;
}

/**
 * Individual Box Styles
 * Uses CSS variables generated from config.js
 * Implements glass morphism effect with backdrop-filter
 */
#box1 {
    /* Dimensions and shape */
    width: var(--box1-width, 300px);
    height: var(--box1-height, 300px);
    border-radius: var(--box1-borderRadius, 30px);

    /* Glass effect layers */
    background: var(--box1-background, rgba(0, 0, 0, 0.2));
    -webkit-backdrop-filter: 
        blur(var(--box1-blur, 40px))
        saturate(var(--box1-saturation, 180%));
    backdrop-filter: 
        blur(var(--box1-blur, 40px))
        saturate(var(--box1-saturation, 180%));
    
    /* Depth effects */
    box-shadow: 0 20px var(--box1-shadowBlur, 20px) var(--box1-shadowColor, rgba(0, 0, 0, 0.3));
    border: 1px solid var(--box1-borderColor, rgba(255, 255, 255, 0.1));
}

#box2 {
    /* Identical structure to box1 with different variables */
    width: var(--box2-width);
    height: var(--box2-height);
    border-radius: var(--box2-borderRadius);
    background: var(--box2-background);
    -webkit-backdrop-filter: 
        blur(var(--box2-blur))
        saturate(var(--box2-saturation));
    backdrop-filter: 
        blur(var(--box2-blur))
        saturate(var(--box2-saturation));
    box-shadow: 0 20px var(--box2-shadowBlur) var(--box2-shadowColor);
    border: 1px solid var(--box2-borderColor);
}

/**
 * Box Hover Effects
 * Creates layered gradient overlays for enhanced depth
 * Activated on hover via opacity transitions
 */
.floating-box::before,
.floating-box::after {
    content: '';
    position: absolute;
    border-radius: 30px;
    opacity: 0;
    transition: opacity 0.4s ease;
}

.floating-box::before {
    /* Inner highlight layer */
    inset: 0;
    background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.1) 0%,
        rgba(255, 255, 255, 0.02) 100%
    );
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.floating-box::after {
    /* Outer glow layer */
    inset: -1px;
    border-radius: 31px;
    background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.05) 0%,
        rgba(255, 255, 255, 0.02) 100%
    );
    z-index: -1;
}

.floating-box:hover::before,
.floating-box:hover::after {
    /* Hover state activation */
    opacity: 0.1;
}

/**
 * Dynamic Glow Effect
 * Follows mouse position using CSS custom properties
 * @see FloatingBox.updateGlowPosition() in Script.js
 */
.glow {
    /* Expanded size for smooth edge transitions */
    position: absolute;
    inset: -50%;  /* Change from width/height 100% to inset -50% */
    width: 200%;  /* Increase width to 200% */
    height: 200%;  /* Increase height to 200% */
    border-radius: inherit;
    filter: blur(var(--box1-glowBlur, 50px));  /* Added fallback */
    opacity: 0;
    
    /* Dynamic positioning based on mouse coordinates */
    background: radial-gradient(
        circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
        var(--box1-glowColor, rgba(255, 255, 255, 0.3)),
        transparent 60%
    );
    
    /* Smooth transitions for opacity and position */
    transition: opacity var(--box-transitionDuration) var(--box-transitionTiming),
                background var(--box-transitionDuration) var(--box-transitionTiming);
    pointer-events: none;
}

/**
 * Background Animation System
 * Implements floating bubble effects
 * @see BubbleManager class in Script.js
 */
.bubble-container {
    /* Positioned behind boxes but covers full viewport */
    position: fixed;
    left: 0;
    right: 0;
    top: -20%;
    width: 100%;
    max-width: 1000px; /* Adjust based on your needs */
    margin: 0 auto;
    height: 140%;
    overflow: visible;
    pointer-events: none;
    z-index: -1;
}

.bubble {
    /* Individual bubble styling */
    position: absolute;
    border-radius: 50%;
    opacity: 1;
    will-change: transform;
}

/**
 * Animation Keyframes
 * Defines motion patterns for bubbles
 * Uses CSS custom properties for dynamic movement
 */
@keyframes floatUp {
    /* Vertical movement with horizontal drift */
    0% {
        transform: translate(0, 120vh);
    }
    100% {
        transform: translate(var(--drift-x), -150%); /* Changed from -120% */
    }
}

@keyframes sway {
    /* Horizontal oscillation effect */
    0%, 100% {
        margin-left: 0;
    }
    50% {
        margin-left: var(--sway-amount);
    }
}